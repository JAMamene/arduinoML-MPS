package ArduinoML.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Action = 0;
  public static final int Actuator = 1;
  public static final int AnalogCondition = 2;
  public static final int AnalogSensor = 3;
  public static final int App = 4;
  public static final int Brick = 5;
  public static final int Condition = 6;
  public static final int LogicalCondition = 7;
  public static final int LogicalSensor = 8;
  public static final int Mode = 9;
  public static final int Reachable = 10;
  public static final int Sensor = 11;
  public static final int SignalTransition = 12;
  public static final int State = 13;
  public static final int TimedTransition = 14;
  public static final int Transition = 15;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x6d5f556878454ac1L, 0xba976d57e4d58942L);
    builder.put(0x3c2a1b6d4a4685faL, Action);
    builder.put(0x3c2a1b6d4a4685f4L, Actuator);
    builder.put(0x6b9055df271b69b0L, AnalogCondition);
    builder.put(0x6b9055df271951bbL, AnalogSensor);
    builder.put(0x3c2a1b6d4a4685d7L, App);
    builder.put(0x3c2a1b6d4a4685e1L, Brick);
    builder.put(0x7c71bdff0dc570e5L, Condition);
    builder.put(0x6b9055df271b69b3L, LogicalCondition);
    builder.put(0x6b9055df27195156L, LogicalSensor);
    builder.put(0x49f3ae9b88635758L, Mode);
    builder.put(0x49f3ae9b886ce6d0L, Reachable);
    builder.put(0x3c2a1b6d4a4685f3L, Sensor);
    builder.put(0x763d572dd5e42763L, SignalTransition);
    builder.put(0x3c2a1b6d4a4685daL, State);
    builder.put(0x763d572dd5e42d08L, TimedTransition);
    builder.put(0x3c2a1b6d4a468605L, Transition);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
